# 1. Вывести на экран 3 раза имя пользователя, от которого запускается команда. #
ubuntu@ip-172-31-23-188:~$ nano 1_name.sh
ubuntu@ip-172-31-23-188:~$ cat 1_name.sh
#!/usr/bin/bash

for n in {1..3}; do whoami; done
ubuntu@ip-172-31-23-188:~$ chmod +x 1_name.sh
ubuntu@ip-172-31-23-188:~$ ./1_name.sh
ubuntu
ubuntu
ubuntu
ubuntu@ip-172-31-23-188:~$ 

# 2. Вывести с помощью цикла while все четные числа от 0 до 100 включительно. #

ubuntu@ip-172-31-23-188:~$ nano 2_numbers.sh
ubuntu@ip-172-31-23-188:~$ cat 2_numbers.sh
#!/usr/bin/bash

y=0
while [ $y -lt 100 ]
  do
    y=$(($y + 2))
    echo $y
  done
ubuntu@ip-172-31-23-188:~$ chmod +x 2_numbers.sh
ubuntu@ip-172-31-23-188:~$ ./2_numbers.sh
2
4
6
8
10
12
14
16
18
20
22
24
26
28
30
32
34
36
38
40
42
44
46
48
50
52
54
56
58
60
62
64
66
68
70
72
74
76
78
80
82
84
86
88
90
92
94
96
98
100
ubuntu@ip-172-31-23-188:~$

# 3. Создать с помощью nano файл test.txt.                                                                         #
# Настроить автоматический бэкап этого файла раз в 10 минут в файл с названием test.txt.bak с использованием cron. #

ubuntu@ip-172-31-23-188:~$ nano test.txt
ubuntu@ip-172-31-23-188:~$ cat test.txt
#!/usr/bin/bash

echo "Hello Victor"
ubuntu@ip-172-31-23-188:~$ nano backup.sh
ubuntu@ip-172-31-23-188:~$ cat backup.sh
#!/usr/bin/bash

cat test.txt > test.txt.bak
ubuntu@ip-172-31-23-188:~$ chmod +x backup.sh
ubuntu@ip-172-31-23-188:~$ crontab -e
crontab: installing new crontab
ubuntu@ip-172-31-23-188:~$ crontab -l
# Edit this file to introduce tasks to be run by cron.
#
# Each task to run has to be defined through a single line
# indicating with different fields when the task will be run
# and what command to run for the task
#
# To define the time you can provide concrete values for
# minute (m), hour (h), day of month (dom), month (mon),
# and day of week (dow) or use '*' in these fields (for 'any').
#
# Notice that tasks will be started based on the cron's system
# daemon's notion of time and timezones.
#
# Output of the crontab jobs (including errors) is sent through
# email to the user the crontab file belongs to (unless redirected).
#
# For example, you can run a backup of all your user accounts
# at 5 a.m every week with:
# 0 5 * * 1 tar -zcf /var/backups/home.tgz /home/
#
# For more information see the manual pages of crontab(5) and cron(8)
#
# m h  dom mon dow   command

*/10 * * * * /home/ubuntu/backup.sh
ubuntu@ip-172-31-23-188:~$ tail -f /var/log/syslog | grep -i cron
Aug 11 11:49:07 ip-172-31-23-188 crontab[2433]: (ubuntu) END EDIT (ubuntu)
Aug 11 11:49:14 ip-172-31-23-188 crontab[2448]: (ubuntu) BEGIN EDIT (ubuntu)
Aug 11 11:50:01 ip-172-31-23-188 cron[483]: (ubuntu) RELOAD (crontabs/ubuntu)
Aug 11 11:50:01 ip-172-31-23-188 CRON[2454]: (ubuntu) CMD (/home/ubuntu/backup.sh)
Aug 11 11:50:17 ip-172-31-23-188 crontab[2448]: (ubuntu) END EDIT (ubuntu)
Aug 11 11:51:18 ip-172-31-23-188 crontab[2464]: (ubuntu) LIST (ubuntu)
Aug 11 11:53:30 ip-172-31-23-188 crontab[2484]: (ubuntu) BEGIN EDIT (ubuntu)
Aug 11 11:53:37 ip-172-31-23-188 crontab[2484]: (ubuntu) END EDIT (ubuntu)
Aug 11 11:53:53 ip-172-31-23-188 crontab[2489]: (ubuntu) LIST (ubuntu)
Aug 11 12:00:01 ip-172-31-23-188 CRON[2511]: (ubuntu) CMD (/home/ubuntu/backup.sh)
^C
ubuntu@ip-172-31-23-188:~$ cat test.txt.bak
#!/usr/bin/bash

echo "Hello Victor"
ubuntu@ip-172-31-23-188:~$
